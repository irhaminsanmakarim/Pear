@model DSLNG.PEAR.Web.ViewModels.Menu.CreateMenuViewModel
@{
    ViewBag.Title = "Create New Menu";
}

<hgroup class="page-hgroup-header">
    <h3 class="page-title">@ViewBag.Title</h3>
</hgroup>

@Html.Partial("_MessageResponse")

<div class="container-box large-wide container-box-form">
    <form action="@Url.Action("Create")" method="POST">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ParentId, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.ParentId, Model.MenuOptions, "Select Parent Menu", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentId)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Order, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Order, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Order)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Remark, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Remark, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Module, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Module, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Module)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                        @Html.EditorFor(model => model.IsActive, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IsActive)
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleGroupIds, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.RoleGroupIds, Model.RoleGroupOptions, new { @class = "form-control", @multiple = "multiple", @size = "7" })
                        @Html.ValidationMessageFor(model => model.RoleGroupIds)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Icon, new { @class = "control-label" })
                        @Html.HiddenFor(model => model.Icon)
                        <div class="well well-sm">
                            @for (int i = 0; i < Model.IconList.Length; i++)
                            {
                                <button type="button" class="btn btn-default btn-sm btn-icon"><i class="fa @Model.IconList[i]" icon-name="@Model.IconList[i]"></i></button>
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Url, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Url, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Url)
                    </div>
                </div>
            </div>
            <button type="submit" class="button button-action">Submit</button>
            <a href="@Url.Action("Index")" class="button">Cancel</a>
        </div>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("button.btn-icon").on("click", function () {
            $('.btn-icon').each(function () {
                $(this).removeClass("btn-success");
            });

            $(this).addClass("btn-success");
            //set icon class name as value for input[Icon]
            var $Icon = $(this).find('i');
            $("input#Icon").val($Icon.attr("icon-name"));
        });
    })
</script>