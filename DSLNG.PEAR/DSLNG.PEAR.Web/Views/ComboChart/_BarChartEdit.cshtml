@model DSLNG.PEAR.Web.ViewModels.Artifact.BarChartViewModel

<div class="form-group form-list">
    @Html.LabelFor(model => model.Series)
    @Html.DropDownList("seriesType", Model.SeriesTypes, new { id = "seriesType", @class = "form-control series-type" })
    <input type="button" value="Add Series" class="btn btn-lightblue" id="add-series" />
</div>


<div class="hidden-fields">
    @for (var i = 0; i < Model.Series.Count; i++)
    {
        var original = i == 0 ? "original" : "";
        var dataSeriesPos = original == "" ? "data-series-pos=" + i : "";
        <div class="series-template @original whitebox" @dataSeriesPos>
            <input type="hidden" name="ComboChart.Charts[@ViewData["ChartIndex"]].BarChart.Series.Index" value="@i" />
            <h2>Series</h2>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.Series[i].Label)
                        @Html.TextBoxFor(model => model.Series[i].Label, new { @class = "form-control",  
                            @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].Label",
                            id="ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__Label"})
                        @Html.ValidationMessageFor(model => model.Series[i].Label)
                    </div>
                </div>
                <div class="series-details-holder">
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.Series[i].Color)
                            <div class="input-group colorpicker">
                                @Html.TextBoxFor(model => model.Series[i].Color, new { @class = "form-control", 
                                @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].Color",
                                id="ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__Color"})
                                <span class="input-group-addon"><i style="background-color:@Model.Series[i].Color"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Series[i].Color)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.Series[i].KpiId)
                            @Html.DropDownListFor(model => model.Series[i].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.Series[i].KpiId.ToString(), Text = Model.Series[i].KpiName } },
                            new { @class = "kpi-list form-control", style = "width:180px", 
                                @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].KpiId",
                                id="ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__KpiId"})
                            @Html.ValidationMessageFor(model => model.Series[i].KpiId)
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @{
        if (i != 0)
        {
            Model.ValueAxes.Where(x => x.Value == Model.Series[i].ValueAxis).First().Selected = true;
        }
                        }
                        <div class="form-group value-axis form-list">
                            @Html.LabelFor(model => Model.Series[i].ValueAxis)
                            @Html.DropDownListFor(model => model.Series[i].ValueAxis, Model.ValueAxes, new { @class = "form-control", 
                           @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].ValueAxis",
                       id="ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__ValueAxis"})
                            @Html.ValidationMessageFor(model => model.Series[i].ValueAxis)
                        </div>
                    </div>
                </div>
            </div>

            <div class="stacks-holder">
                <label>&nbsp;</label>
                <input type="button" value="Add Stack" class="btn btn-lightblue add-stack" />
                @for (var j = 0; j < Model.Series[i].Stacks.Count; j++)
                { 
                    <fieldset class="stack-template  @original form-inline">
                        <input type="hidden" name="ComboChart.Charts[@ViewData["ChartIndex"]].BarChart.Series[@i].Stacks.Index" value="@j" />
                        <legend>Stack</legend>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group form-list">
                                    @Html.LabelFor(model => model.Series[i].Stacks[j].Label)
                                    @Html.TextBoxFor(model => model.Series[i].Stacks[j].Label, new { @class = "form-control", 
                                         @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].Stacks["+j+"].Label",
                                         id = "ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__Stacks_"+j+"__Label"})
                                    @Html.ValidationMessageFor(model => model.Series[i].Stacks[j].Label)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Series[i].Stacks[j].KpiId)
                                    @Html.DropDownListFor(model => model.Series[i].Stacks[j].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.Series[i].Stacks[j].KpiId.ToString(), Text = Model.Series[i].Stacks[j].KpiName } }, 
                                    new { @class = "kpi-list  form-control", style = "width:180px", 
                                        @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].Stacks["+j+"].KpiId",
                                    id = "ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__Stacks_"+j+"__KpiId"})
                                    @Html.ValidationMessageFor(model => model.Series[i].Stacks[j].KpiId)
                                </div>
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(model => model.Series[i].Stacks[j].Color)
                                <div class="input-group colorpicker">
                                    @Html.TextBoxFor(model => model.Series[i].Stacks[j].Color, new { @class = "form-control" , 
                                   @Name="ComboChart.Charts["+@ViewData["ChartIndex"]+"].BarChart.Series["+i+"].Stacks["+j+"].Color",
                               id = "ComboChart_Charts_"+@ViewData["ChartIndex"]+"__BarChart_Series_"+i+"__Stacks_"+j+"__Color"})
                                    <span class="input-group-addon"><i style="background-color:@Model.Series[i].Stacks[j].Color"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Series[i].Stacks[j].Color)
                            </div>
                        </div>
                        <input type="button" value="Remove" class="remove" />
                    </fieldset>
                }
            </div>


            <input type="button" value="Remove" class="remove" />
        </div>
        
    }
</div>
