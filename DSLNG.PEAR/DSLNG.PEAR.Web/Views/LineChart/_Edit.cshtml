@model DSLNG.PEAR.Web.ViewModels.Artifact.ArtifactDesignerViewModel

<div class="form-group">
    <label class="col-sm-4 control-label">Series</label>
    <div class="col-sm-8">
        <input type="button" value="Add Series" class="button button-action button-tny" id="add-series" />
    </div>
</div>

<div id="hidden-fields">
    @for (var i = 0; i < Model.LineChart.Series.Count; i++)
    {
        var original = i == 0 ? "original" : "";
        var dataSeriesPos = original == "" ? "data-series-pos=" + i : "";
        <div class="series-template @original container-box form-horizontal form-artifact" @dataSeriesPos>
            <input type="hidden" name="LineChart.Series.Index" value="@i" />
            <h4 class="page-title text-inline">Series</h4>
            <input type="button" value="Remove" class="remove button button-tny button-danger pull-right" />
            <hr class="just-margin-bottom"/>

            <div class="clearfix">
                <div class="col-sm-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LineChart.Series[i].Label, new { @class = "col-sm-4 control-label"})
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.LineChart.Series[i].Label, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LineChart.Series[i].Label)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.LineChart.Series[i].Color, new { @class = "col-sm-4 control-label"})
                        <div class="col-sm-8">
                            <div class="input-group colorpicker">
                                @Html.TextBoxFor(model => model.LineChart.Series[i].Color, new { @class = "form-control" })
                                <span class="input-group-addon"><i style="background-color:@Model.LineChart.Series[i].Color"></i></span>
                            </div>
                            @Html.ValidationMessageFor(model => model.LineChart.Series[i].Color)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.LineChart.Series[i].KpiId, new { @class = "col-sm-4 control-label"})
                        <div class="col-sm-8">
                            @Html.DropDownListFor(model => model.LineChart.Series[i].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.LineChart.Series[i].KpiId.ToString(), Text = Model.LineChart.Series[i].KpiName } }, new { @class = "kpi-list form-control", style = "width:180px" })
                            @Html.ValidationMessageFor(model => model.LineChart.Series[i].KpiId)
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    @{
                            if (i != 0)
                            {
                                Model.LineChart.ValueAxes.Where(x => x.Value == Model.LineChart.Series[i].ValueAxis).First().Selected = true;
                            }
                        <div class="form-group value-axis form-list">
                            @Html.LabelFor(model => Model.LineChart.Series[i].ValueAxis, new { @class = "col-sm-4 control-label"})
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.LineChart.Series[i].ValueAxis, Model.LineChart.ValueAxes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LineChart.Series[i].ValueAxis)
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }

</div>




