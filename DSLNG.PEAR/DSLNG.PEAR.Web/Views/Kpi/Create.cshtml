@model DSLNG.PEAR.Web.ViewModels.Kpi.CreateKpiViewModel
@{
    ViewBag.Title = "Create New KPI";
    int i = 0;
}

<hgroup class="page-hgroup-header">
    <h3 class="page-title">@ViewBag.Title</h3>
    <div class="breadcrumbs-regawa">
        <ul>
            <li>Plan</li>
            <li>KPI Configuration</li>
            <li>KPI</li>
            <li>@ViewBag.Title</li>
        </ul>
    </div>
</hgroup>

@Html.Partial("_MessageResponse")

<div class="container-box small-wide container-box-form">
        <form action="@Url.Action("Create")" method="POST">
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LevelId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.LevelId, Model.LevelList, "Select Level", new { @class = "form-control", @onChange = "levelOnChange(this)" })
                @Html.ValidationMessageFor(model => model.LevelId)
            </div>
            <div class="form-group pillar" style="display:none">
                @Html.LabelFor(model => model.PillarId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PillarId, Model.PillarList, "Select Pillar", new { @class = "form-control", @onChange = "pillarOnChange(this)" })
                @Html.ValidationMessageFor(model => model.PillarId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RoleGroupId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.RoleGroupId, Model.RoleGroupList, "Select Accountability", new { @class = "form-control", @onChange = "roleGroupOnChange(this)" })
                @Html.ValidationMessageFor(model => model.RoleGroupId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.TypeId, Model.TypeList, "Selet Type", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.GroupId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.GroupId, Model.GroupList, "Select Group", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GroupId)
            </div>
            <div class="form-horizontal">
                @Html.LabelFor(model => model.Code, new { @class = "" })
                <div class="form-group">
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.CodeFromPillar, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.CodeFromLevel, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(model => model.CodeFromRoleGroup, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Code)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.YtdFormulaValue, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.YtdFormulaValue, Model.YtdFormulaList, "Select PMS Formula Ytd", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YtdFormulaValue)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsEconomic, new { @class = "control-label" })
                @Html.EditorFor(model => model.IsEconomic, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsEconomic)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MeasurementId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.MeasurementId, Model.MeasurementList, "Select Measurement", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementId)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MethodId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.MethodId, Model.MethodList, "Select Method", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MethodId)
            </div>
            <div class="form-group form-list">
                <label class="text-inline">Relation Model</label>
                <button type="button" class="btn btn-default form-inline add-relation-model"><i class="glyphicon glyphicon-plus"></i></button>
            </div>
            <div class="relation-model-wrapper form-horizontal">
                @foreach(var rm in Model.RelationModels)
                {
                    <div class="form-group relation-model-list">
                        <input type="hidden" name="RelationModels.Index" value="@i" />
                            <div class="col-sm-5">
                                <select name="RelationModels[@i].KpiId" class="form-control rm-kpi">
                                    <option value="0">Select KPI</option>
                                    @foreach (var item in Model.KpiList)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-sm-4">
                                <select name="RelationModels[@i].Method" class="form-control rm-method">
                                    <option value="0">-</option>
                                    <option value="Quantitative">Quantitative</option>
                                    <option value="Qualitative">Qualitative</option>
                                </select>
                            </div>
                            <div class="col-sm-3">
                                <button type="button" class="btn btn-default form-control remove-relation-model" style="display: inline-block;"><i class="glyphicon glyphicon-minus"></i></button>

                            </div>
                    </div>
                    i++;
                }
            </div>
            <span id="counter" data-relation-model="@i"></span>
            <div class="form-group">
                @Html.LabelFor(model => model.Order, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Order, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Order)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.PeriodeValue, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PeriodeValue, Model.PeriodeList, "Select Period Input", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PeriodeValue)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Remark, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Remark)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
                @Html.EditorFor(model => model.IsActive, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
            <button type="submit" class="button button-action">Submit</button>
            <a href="@Url.Action("Index")" class="button">Cancel</a>

        </form>
</div>
<script>

    $(document).ready(function () {
        var i = $('#counter').attr('data-relation-model');
        i = parseInt(i) === NaN ? 0 : parseInt(i);

        $('.add-relation-model').click(function () {
            var clone = $('.relation-model-list:last').clone(true);
            clone.find('input[name="RelationModels.Index"]').val(i);
            clone.find('.rm-kpi').attr('name', 'RelationModels[' + i + '].KpiId');
            clone.find('.rm-method').attr('name', 'RelationModels[' + i + '].Method');
            clone.appendTo('.relation-model-wrapper').show();
            if (i > 0) {
                $('.remove-relation-model').show();
            }
            i++;
        });

        if (i <= 1) {
            $('.remove-relation-model').hide();
        }

        $('.remove-relation-model').click(function () {
            i--;
            $(this).parent().parent().remove();
            if (i == 1) {
                $('.remove-relation-model').hide();
            }
        });
    })

    function levelOnChange(val) {
        var levelId = $(val).val();
        $.ajax({
            url: '@Url.Action("GetLevelCode")',
            data: { id: levelId },
            type: 'GET',
            success: function (data) {
                $("input[name=CodeFromLevel]").val(data);
            }
        });
        var selectedText = $(val).find("option:selected").text();
        if (selectedText == "Corporate") {
            $(".pillar").show();
        }
        else {
            $(".pillar").hide();
        }
    }

    function pillarOnChange(val) {
        var pillarId = $(val).val();
        $.ajax({
            url: '@Url.Action("GetPillarCode")',
            data: { id: pillarId },
            type: 'GET',
            success: function (data) {
                $("input[name=CodeFromPillar]").val(data);
            }
        });
    }

    function roleGroupOnChange(val) {
        var roleId = $(val).val();
        $.ajax({
            url: '@Url.Action("GetRoleGroupCode")',
            data: { id: roleId },
            type: 'GET',
            success: function (data) {
                $("input[name=CodeFromRoleGroup]").val(data);
            }
        });
    }
</script>