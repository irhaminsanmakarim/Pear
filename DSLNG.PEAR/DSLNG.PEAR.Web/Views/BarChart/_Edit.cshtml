@model DSLNG.PEAR.Web.ViewModels.Artifact.ArtifactDesignerViewModel

<div class="form-group">
    @Html.LabelFor(model => model.BarChart.Series, new { @class = "col-sm-4 control-label"})
    <div class="col-sm-8">
        @Html.DropDownList("seriesType", Model.BarChart.SeriesTypes, new { id = "seriesType", @class = "form-control" })
        <input type="button" value="Add Series" class="button button-action button-tny margin-top-1rem" id="add-series" />
    </div>    
</div>

<div id="hidden-fields">
    @for (var i = 0; i < Model.BarChart.Series.Count; i++)
    {
        var original = i == 0 ? "original" : "";
        var dataSeriesPos = original == "" ? "data-series-pos=" +  i   : "";
        <div class="series-template @original container-box form-horizontal form-artifact" @dataSeriesPos >
            <input type="hidden" name="BarChart.Series.Index" value="@i" />
            <h4 class="page-title text-inline">Series</h4>
            <input type="button" value="Remove" class="remove button button-tny button-danger pull-right" />
            <hr class="just-margin-bottom"/>

            <div class="clearfix">
                <div class="col-sm-6">
                    <div class="form-group form-list">
                        @Html.LabelFor(model => model.BarChart.Series[i].Label, new { @class = "col-sm-4 control-label"})
                        <div class="col-sm-8">
                            @Html.TextBoxFor(model => model.BarChart.Series[i].Label, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BarChart.Series[i].Label)
                        </div>
                    </div>
                </div>
                <div class="series-details-holder">
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.BarChart.Series[i].Color, new { @class = "col-sm-4 control-label"})
                            <div class="col-sm-8">
                                <div class="input-group colorpicker">
                                    @Html.TextBoxFor(model => model.BarChart.Series[i].Color, new { @class = "form-control" })
                                    <span class="input-group-addon"><i style="background-color:@Model.BarChart.Series[i].Color"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.BarChart.Series[i].Color)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group form-list">
                            @Html.LabelFor(model => model.BarChart.Series[i].KpiId, new { @class = "col-sm-4 control-label"})
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.BarChart.Series[i].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.BarChart.Series[i].KpiId.ToString(), Text = Model.BarChart.Series[i].KpiName } }, new { @class = "kpi-list form-control", style = "width:100%" })
                                @Html.ValidationMessageFor(model => model.BarChart.Series[i].KpiId)
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @{
                           if (i != 0)
                            {
                                Model.BarChart.ValueAxes.Where(x => x.Value == Model.BarChart.Series[i].ValueAxis).First().Selected = true;
                            }
                        <div class="form-group value-axis form-list">
                            @Html.LabelFor(model => Model.BarChart.Series[i].ValueAxis, new { @class = "col-sm-4 control-label"})
                            <div class="col-sm-8">
                                @Html.DropDownListFor(model => model.BarChart.Series[i].ValueAxis, Model.BarChart.ValueAxes, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.BarChart.Series[i].ValueAxis)
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </div>

            <div class="stacks-holder tingkat2">
                <input type="button" value="Add Stack" class="button button-super-tny button-action margin-0 add-stack" />
                @for (var j = 0; j < Model.BarChart.Series[i].Stacks.Count; j++)
                { 
                    <fieldset class="stack-template  @original second-child-artifact-box form-inline">
                        <input type="hidden" name="BarChart.Series[@i].Stacks.Index" value="@j" />
                        <h5 class="page-title text-inline">Stack</h5>
                        <input type="button" value="Remove" class="remove button button-super-tny button-danger pull-right" />
                        <hr class="just-margin-bottom"/>

                        <div class="clearfix">
                                <div class="form-group form-list">
                                    @Html.LabelFor(model => model.BarChart.Series[i].Stacks[j].Label)
                                    @Html.TextBoxFor(model => model.BarChart.Series[i].Stacks[j].Label, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BarChart.Series[i].Stacks[j].Label)
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.BarChart.Series[i].Stacks[j].KpiId)
                                    @Html.DropDownListFor(model => model.BarChart.Series[i].Stacks[j].KpiId, new List<SelectListItem> { new SelectListItem { Value = Model.BarChart.Series[i].Stacks[j].KpiId.ToString(), Text = Model.BarChart.Series[i].Stacks[j].KpiName } }, new { @class = "kpi-list  form-control", style = "width:180px" })
                                    @Html.ValidationMessageFor(model => model.BarChart.Series[i].Stacks[j].KpiId)
                                </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.BarChart.Series[i].Stacks[j].Color)
                                <div class="input-group colorpicker">
                                    @Html.TextBoxFor(model => model.BarChart.Series[i].Stacks[j].Color, new { @class = "form-control" })
                                    <span class="input-group-addon"><i style="background-color:@Model.BarChart.Series[i].Stacks[j].Color"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.BarChart.Series[i].Stacks[j].Color)
                            </div>
                        </div>
                    </fieldset>
                }
            </div>

        </div>
        
    }

</div>




